- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variable
      include_vars: vars/vpc_setup

    - name: Create CE3S VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
      register: vpcout

  #  - debug:
  #     var: vpcout

    - name: Create Public Subnet 1 in Zone1
      ec2_vpc_subnet:
         vpc_id: "{{ vpcout.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone1 }}"
         state: "{{ state }}"
         cidr: "{{ Public1Cidr }}"
         map_public: yes
         resource_tags:
           Name: CE3S-pubsub1
      register: pubsub1_out

    - name: Create Public Subnet 2 in Zone2
      ec2_vpc_subnet:
         vpc_id: "{{ vpcout.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone2 }}"
         state: "{{ state }}"
         cidr: "{{ Public2Cidr }}"
         map_public: yes
         resource_tags:
           Name: CE3S-pubsub2
      register: pubsub2_out

    - name: Create Public Subnet 3 in Zone3
      ec2_vpc_subnet:
         vpc_id: "{{ vpcout.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone3 }}"
         state: "{{ state }}"
         cidr: "{{ Public3Cidr }}"
         map_public: yes
         resource_tags:
           Name: CE3S-pubsub3
      register: pubsub3_out

    - name: Create Private Subnet 1 in Zone1
      ec2_vpc_subnet:
         vpc_id: "{{ vpcout.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone1 }}"
         state: "{{ state }}"
         cidr: "{{ Private1Cidr }}"
         map_public: yes
         resource_tags:
           Name: CE3S-privsub1
      register: privsub1_out

    - name: Create Private Subnet 2 in Zone2
      ec2_vpc_subnet:
         vpc_id: "{{ vpcout.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone2 }}"
         state: "{{ state }}"
         cidr: "{{ Private2Cidr }}"
         map_public: yes
         resource_tags:
           Name: CE3S-privsub2
      register: privsub2_out

    - name: Create Private Subnet 3 in Zone3
      ec2_vpc_subnet:
         vpc_id: "{{ vpcout.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone3 }}"
         state: "{{ state }}"
         cidr: "{{ Private3Cidr }}"
         map_public: yes
         resource_tags:
           Name: CE3S-privsub3
      register: privsub13_out

    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: CE3S_IGW
      register: igw_out

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: CE3S_PublicRT
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: public_RT_out

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{ state }}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: CE3S_PrivateRT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: private_RT_out
